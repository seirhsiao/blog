# Hexo Configuration
## Docs: http://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site
title: ——╅ 萧 ☯ ℡
subtitle: 一花一世界，一叶一追寻。一曲一场叹，一生为一人。
description: "佛为心，道为骨，儒为表，大度看世界。技在手，能在身，思在脑，从容过生活。三千年读史，不外功名利禄；九万里悟道，终归诗酒田园"
author: "萧"
email: "309183912@qq.com"
language: zh-CN # 最新版中，不再使用zh-Hans
timezone:
github_username:  "seirhsiao"

# URL
## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'
url: http://blog.seirhsiao.com/
root: /
permalink: :year/:month/:day/:title/
permalink_defaults:

# Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render: README.md

# Writing
new_post_name: :year-:month-:day-:title.md
#new_post_name: :title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link: true # Open external links in new tab
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
highlight:
  enable: true
  line_number: true
  auto_detect: true
  tab_replace:

# Category & Tag
default_category: uncategorized
category_map:
tag_map:

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss

# Pagination
## Set per_page to 0 to disable pagination
per_page: 10
pagination_dir: page

# Home page setting
# path: Root path for your blogs index page. (default = '')
# per_page: Posts displayed per page. (0 = disable pagination)
# order_by: Posts order. (Order by date descending by default)
index_generator:
  path: ''
  per_page: 10
  order_by: -date

## 修改归档页面、某一分类页面、某一标签页面的显示篇数
## 参考：http://theme-next.iissnan.com/faqs.html#setting-page-size
archive_generator:
  per_page: 0
  yearly: false
  monthly: false
  daily: false

category_generator:
  per_page: 0

tag_generator:
  per_page: 0

# Extensions
## Plugins: http://hexo.io/plugins/
## Themes: http://hexo.io/themes/
theme: next

## Plugins: https://hexo.io/plugins/
# RSS，要先进入站点文件夹根目录安装插件
# npm install hexo-generator-feed --save 即可
# 无需更多配置
# 参数说明查看 README：https://github.com/hexojs/hexo-generator-feed
feed:
  type: atom
  path: atom.xml
# 文章数，0 为全部
  limit: 0
  hub:
# 是否包含文章内容
  content: true


# emoji 支持，教程见本文 6.3 节
githubEmojis:
  enable: true
  idName: github-emoji
  unicode: false
  styles:
  localEmojis:

 # hexo-tag-cloud
tag_cloud:
  textFont: Trebuchet MS, Helvetica
  textColor: '#333'
  textHeight: 25
  outlineColor: '#E2E1D1'
  maxSpeed: 0.1

# Security
## 安装hexo-blog-encrypt
# Security
encrypt: # hexo-blog-encrypt
  abstract: 有东西被加密了, 请输入密码查看.
  message: 您好, 这里需要密码.
  #tags:
  # - {name: tagName, password: 密码A}
  # - {name: tagName, password: 密码B}
  #template: <div id="hexo-blog-encrypt" data-wpm="{{hbeWrongPassMessage}}" data-whm="{{hbeWrongHashMessage}}"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="{{hbeMessage}}" /><label>{{hbeMessage}}</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="{{hbeHmacDigest}}">{{hbeEncryptedData}}</script></div>
  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.
  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.

#Sitemap
sitemap:
  path: sitemap.xml
baidusitemap:
  path: baidusitemap.xml

plugins:
#  - hexo-generator-feed
#  - hexo-generator-sitemap
#  - hexo-footnotes
# - hexo-qiniu-sync

#七牛云存储设置
##offline       是否离线. 离线状态将使用本地地址渲染
##sync          是否同步
##bucket        空间名称.
##access_key    上传密钥AccessKey
##secret_key    上传密钥SecretKey
##dirPrefix     上传的资源子目录前缀.如设置，需与urlPrefix同步
##urlPrefix     外链前缀.
##local_dir     本地目录.
##update_exist  是否更新已经上传过的文件(仅文件大小不同或在上次上传后进行更新的才会重新上传)
##image/js/css  子参数folder为不同静态资源种类的目录名称，一般不需要改动
##image.extend  这是个特殊参数，用于生成缩略图或加水印等操作。具体请参考http://developer.qiniu.com/docs/v6/api/reference/fop/image/
##              可使用基本图片处理、高级图片处理、图片水印处理这3个接口。例如 ?imageView2/2/w/500 即生成宽度最多500px的缩略图
# qiniu:
#   offline: true
#   sync: true
#   bucket: blog
#   access_key: e90t2Ljvb4h_3-9fVIl4cFIu__cuCqwxkVKmHWmg
#   secret_key: KmBIFM6n5jRb2cUzeiVeib-ssDcXHoVySl5-rk7v
#   dirPrefix: static
#   urlPrefix: http://7xoc1k.com1.z0.glb.clouddn.com/static
#   local_dir: static
#   update_exist: true
#   image:
#     folder: images
#     extend:
#   js:
#     folder: js
#   css:
#     folder: css

search:
  path: search.xml
  field: post
  format: html
  limit: 10000

# https://github.com/mythsman/hexo-douban
douban:
  user: incoder # 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：https://www.douban.com/people/xxxxxx/" ，其中的”xxxxxx”就是你的个人ID了。
  builtin: true # 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。
  book:
    title: '书中自有黄金屋'       # 该页面的标题
    quote: '只有学习才能让我快乐~' # 写在页面开头的一段话,支持html语法.
  movie:
    title: '有人的地方，就有江湖！'
    quote: '时光追忆！'
  game:
    title: '那时候太年轻'
    quote: '游戏可以重来，人生呢？'
  timeout: 10000 # optional 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。

# Markdown
## https://github.com/chjj/marked
# markdown:
#   gfm: true
#   pedantic: false
#   sanitize: false
#   tables: true
#   breaks: true
#   smartLists: true
#   smartypants: true

## Markdown-it config
## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki
markdown:
  # 渲染设置
  render:
    # 置为true时，html内容保持不变；置为false时，html内容将被转义成普通字符串
    html: true
    # 是否生成与XHTML完全兼容的标签（虽然我不懂是什么意思）
    xhtmlOut: false
    # 置为true时，每个换行符都被渲染成一个<br>（即Hexo的默认表现）；置为false时，只有空行才会被渲染为<br>（GFM的默认表现）
    breaks: true
    # 是否自动识别链接并把它渲染成链接
    linkify: true
    # 是否自动识别印刷格式（意思是把(c)渲染为©这样的）
    typographer: true
    # 如果typographer被设置为true，则该选项用于设置将dumb quotes（""）自动替换为smart quotes
    quotes: '“”‘’'
  # 设置所需插件
  plugins:
    - markdown-it-abbr
    - markdown-it-footnote
    - markdown-it-ins
    - markdown-it-sub
    - markdown-it-sup
  # 锚点设置（因为我没有尝试相关内容，所以就不翻译相关说明了）
  anchors:
    level: 2
    collisionSuffix: 'v'
    permalink: true
    permalinkClass: header-anchor
    permalinkSymbol: ''

leancloud_counter_security:
  enable_sync: true
  app_id: PFdiF3pQOKd2cMhsTRt7bDYT # <<your app id>>
  app_key: WprfuKVn4SHdhAU8UqjC0Fyb #<<your app key>
  username: hsiao #<<your username>> #如留空则将在部署时询问
  password: hsiao #<<your password>> #建议留空以保证安全性，如留空则将在部署时询问

# Deployment
## Docs: http://hexo.io/docs/deployment.html
deploy:
- type: git
  repo:
    github: git@github.com:seirhsiao/blog.git,gh-pages
    gitcafe: git@git.dev.tencent.com:pactera/blog.git,gh-pages #git@git.coding.net:pactera/blog.git,gh-pages
    #gitee: git@gitee.com:lanily/blog.git,gh-pages
# - type: baidu_url_submitter
# - type: leancloud_counter_security_sync

### 添加萌妹子动图
# Live2D
## https://github.com/EYHN/hexo-helper-live2d
live2d:
  enable: false # 开启live2d
  #enable: false
  scriptFrom: local # 默认
  # pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)
  # pluginJsPath: lib/ # 脚本文件相对与插件根目录路径
  # pluginModelPath: assets/ # 模型文件相对与插件根目录路径
  # scriptFrom: jsdelivr # jsdelivr CDN
  # scriptFrom: unpkg # unpkg CDN
  # scriptFrom: https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js #https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url
  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中
  debug: false # 调试, 是否在控制台输出日志
  model:
    # use: live2d-widget-model-hibiki
    use: live2d-widget-model-wanko # npm-module package name
    # use: wanko # 博客根目录/live2d_models/ 下的目录名
    # use: ./wives/wanko # 相对于博客根目录的路径
    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url
  display:
    superSample: 2
    position: left
    width: 150
    height: 300
    hOffset: 0
    vOffset: -20
  mobile:
    show: false # 是否在移动设备上显示
    scale: 0.5 # 移动设备上的缩放
  react:
    opacityDefault: 0.7
    opacityOnHover: 0.8

# Aplayer 音乐播放器插件
## Dependency: https://github.com/MoePlayer/hexo-tag-aplayer
# aplayer:
#   script_dir: js # Public 目录下脚本目录路径，默认: 'assets/js'
#   style_dir: css # Public 目录下样式目录路径，默认: 'assets/css'
  #cdn: http://xxx/aplayer.min.js # 引用 APlayer.js 外部 CDN 地址 (默认不开启)
  #style_cdn: http://xxx/aplayer.min.css # 引用 APlayer.css 外部 CDN 地址 (默认不开启)
  # meting: true # MetingJS 支持
  #meting_api: http://xxx/api.php # 自定义 Meting API 地址
  #meting_cdn: http://xxx/Meing.min.js # 引用 Meting.js 外部 CDN 地址 (默认不开启)
  # asset_inject: true # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启
  #externalLink: http://xxx/aplayer.min.js # 老版本参数，功能与参数 cdn 相同
